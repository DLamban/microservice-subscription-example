version: "3.7"
services:
  api-gateway:
    build:
      args:
      - NODE_ENV=development
      context: api-gateway
    command: npm run start-watch
    environment:
      - JWT_MASTER_KEY=/run/secrets/jwt-master-key
      - NODE_ENV=development
    ports:
      - 4000:4000
    secrets:      
      - jwt-master-key
    volumes:
      - ./api-gateway/src:/code/src:ro
      - ./api-gateway/package.json:/code/package.json
      - ./api-gateway/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
  subscription-microservice:
    build:
      args:
      - NODE_ENV=development
      context: subscription-microservice
    command: npm run start-watch
    environment:
      - DATABASE_DB=demosubscriptiondb
      - DATABASE_USER=root
      - DATABASE_PASSWORD=/run/secrets/db-password
      - JWT_MASTER_KEY=/run/secrets/jwt-master-key
      - DATABASE_HOST=db
      - NODE_ENV=development
    ports:
      - 4001:4001      
    secrets:
      - db-password
      - jwt-master-key
    volumes:
      - ./subscription-microservice/src:/code/src:ro
      - ./subscription-microservice/package.json:/code/package.json
      - ./subscription-microservice/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
    depends_on:
      - db
  db:
    image: mysql:8.0.19
    command: '--default-authentication-plugin=mysql_native_password'
    command: mysqld --init-file="/tmp/commands/init.sql"
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
      - ./commands:/tmp/commands
    networks:
      - private
    environment:
      - MYSQL_DATABASE=demosubscriptiondb
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
networks:
  public:
  private:
volumes:
  back-notused:
  db-data:
secrets:
  db-password:
    file: db/password.txt
  jwt-master-key:
    file: secrets/jwttoken.txt
